{"name":"Igloo","tagline":"A framework for unit testing in C++","body":"Igloo is a unit testing framework for C++ that aims to:\r\n\r\n- stay out of your way and let you focus on what you want to test\r\n- help you create readable tests\r\n- have a syntax that doesn't make you repeat yourself\r\n\r\n# License\r\n\r\nIgloo is distributed under the Boost Software License, Version 1.0, which encourages both commercial and non-commercial use.\r\n\r\n#Example\r\n\r\nThe following listing shows a complete test application written in Igloo:\r\n\r\n```cpp\r\n#include <igloo/igloo.h>\r\nusing namespace igloo;\r\n\r\nContext(a_guitar_with_a_fuzzbox)\r\n{\r\n  void SetUp()\r\n  {\r\n    guitar.AddEffect(fuzzbox);\r\n  }\r\n\r\n  Spec(fuzzbox_starts_in_clean_mode)\r\n  {\r\n    Assert::That(guitar.Sound(), Equals(Clean));\r\n  }\r\n\r\n  Context(a_fuzzbox_in_distorted_mode)\r\n  {\r\n    void SetUp()\r\n    {\r\n      Parent().fuzzbox.Switch();\r\n    }\r\n\r\n    Spec(when_I_fret_the_strings_the_sound_is_distorted)\r\n    {\r\n      Assert::That(Parent().guitar.Sound(), Equals(Distorted));\r\n    }\r\n\r\n    Spec(when_I_switch_the_fuzzbox_the_sound_is_clean)\r\n    {\r\n      Parent().fuzzbox.Switch();\r\n      Assert::That(Parent().guitar.Sound(), Equals(Clean));\r\n    }\r\n  };\r\n\r\n  Fuzzbox fuzzbox;\r\n  Guitar guitar;\r\n};\r\n\r\nint main()\r\n{\r\n  return TestRunner::RunAllTests();\r\n}\r\n```\r\n# Screencast\r\n\r\nThe following video shows Igloo being used as the testing framework to create one possible solution to the String Calculator TDD Kata.\r\n\r\nIn this example we use the alternative Describe/It syntax instead of the original Context/Spec syntax. If you want to use the alternative syntax you should #include <igloo/igloo_alt.h> instead of #include <igloo/igloo.h>. The alternative syntax is available from version 0.6.\r\n\r\n![Screencast using Igloo](https://secure-b.vimeocdn.com/ts/165/843/165843506_295.jpg)\r\n\r\n[String Calculator Kata in C++](https://vimeo.com/25207680)\r\n\r\n# Installing Igloo\r\n\r\nIgloo is implemented as a set of header files. Therefore there is no need for you to go through any additional steps to build it. After you've downloaded Igloo, just tell your build system to look for additional header files in the directory where you put Igloo, and you're ready to go.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}